
import logging
import os
import random
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

# Ø¥Ø¹Ø¯Ø§Ø¯ Ø³Ø¬Ù„ Ø§Ù„Ø£Ø­Ø¯Ø§Ø«
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# Ø¥Ø´Ø§Ø±Ø§Øª ÙˆÙ‡Ù…ÙŠØ© Ù…Ø¨Ù†ÙŠØ© Ø¹Ù„Ù‰ EMA + RSI + MACD ÙƒÙ…Ø«Ø§Ù„
def generate_signals():
    signals = [
        "Buy ðŸ“ˆ (EMA Cross + RSI < 30)",
        "Sell ðŸ“‰ (MACD Divergence + RSI > 70)"
    ]
    return random.sample(signals, 2)

# Ø¹Ù†Ø¯ Ø¨Ø¯Ø¡ Ø§Ù„Ø£Ù…Ø± /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("Hello Abdullah, these are the deals today. ðŸ‡¸ðŸ‡¦")
    signals = generate_signals()
    for signal in signals:
        await update.message.reply_text(signal)

# Ù†Ù‚Ø·Ø© Ø§Ù„ØªØ´ØºÙŠÙ„ Ø§Ù„Ø£Ø³Ø§Ø³ÙŠØ©
def main():
    token = os.environ.get("BOT_TOKEN")
    if not token:
        print("Error: BOT_TOKEN is not set in environment variables.")
        return

    app = ApplicationBuilder().token(token).build()
    app.add_handler(CommandHandler("start", start))
    app.run_polling()

if __name__ == '__main__':
    main()
